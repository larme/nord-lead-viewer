// Generated by CoffeeScript 1.3.1
(function() {
  var Manufacturer_ID, Model_ID, bang, inlets, msg_counter, msg_int, outlets, parse_raw_data, patch_counter, raw, raw_data, root, status, sysex_finished;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  Manufacturer_ID = 51;

  Model_ID = 4;

  inlets = 1;

  outlets = 2;

  patch_counter = 0;

  msg_counter = 0;

  raw_data = [];

  status = 0;

  msg_int = function(n) {
    switch (n) {
      case 240:
        status = 1;
        return raw_data = [];
      case 247:
        status = 0;
        return sysex_finished(raw_data);
      default:
        return raw_data.push(n);
    }
  };

  bang = function(b) {
    return outlet(0, parse_raw_data(raw_data));
  };

  raw = function(r) {
    return outlet(1, raw_data);
  };

  sysex_finished = function(data) {
    var elt, i, result, _i, _len, _results;
    result = parse_raw_data(data);
    if (result) {
      _results = [];
      for (i = _i = 0, _len = result.length; _i < _len; i = ++_i) {
        elt = result[i];
        _results.push(outlet(0, [i, elt]));
      }
      return _results;
    }
  };

  parse_raw_data = function(data) {
    var i, patch_data, patch_data_length, result;
    patch_data_length = 132;
    if (data[0] === Manufacturer_ID && data[2] === Model_ID) {
      patch_data = data.slice(5, patch_data_length + 5);
      result = (function() {
        var _i, _ref, _results;
        _results = [];
        for (i = _i = 0, _ref = patch_data_length / 2; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
          _results.push(patch_data[i * 2] + 16 * patch_data[i * 2 + 1]);
        }
        return _results;
      })();
      return result;
    } else {
      return null;
    }
  };

  root.inlets = inlets;

  root.outlets = outlets;

  root.bang = bang;

  root.msg_int = msg_int;

  root.raw = raw;

}).call(this);
